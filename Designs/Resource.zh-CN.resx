<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CatAction" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="CatAppearance" xml:space="preserve">
    <value>外观</value>
  </data>
  <data name="CatBehavior" xml:space="preserve">
    <value>行为</value>
  </data>
  <data name="CatData" xml:space="preserve">
    <value>数据</value>
  </data>
  <data name="CatInformation" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="CatPropertyChanged" xml:space="preserve">
    <value>属性已更改</value>
  </data>
  <data name="ControlOnRightToLeftLayoutChangedDescr" xml:space="preserve">
    <value>RightToLeft属性更改时发生</value>
  </data>
  <data name="DesignerActionAppearanceItemDisplayName" xml:space="preserve">
    <value>外观</value>
  </data>
  <data name="DesignerActionInformationItemDisplayName" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="drawItemEventDescr" xml:space="preserve">
    <value>每当绘制特定项/区域时发生</value>
  </data>
  <data name="InvalidArgument" xml:space="preserve">
    <value>{0} 无效的参数 {1}</value>
  </data>
  <data name="InvalidLowBoundArgumentEx" xml:space="preserve">
    <value>{0} 无效的下限参数 {1}</value>
  </data>
  <data name="PropertiesCategoryName" xml:space="preserve">
    <value>属性</value>
  </data>
  <data name="selectedIndexChangedEventDescr" xml:space="preserve">
    <value>SelectedIndex 属性发生更改时发生</value>
  </data>
  <data name="selectedIndexDescr" xml:space="preserve">
    <value>TabControl 选中选项卡页序号</value>
  </data>
  <data name="TabBaseImageListDescr" xml:space="preserve">
    <value>此选项卡将从中获取图像的ImageList对象</value>
  </data>
  <data name="TabBaseTabCountDescr" xml:space="preserve">
    <value>选项卡数量</value>
  </data>
  <data name="TabControlAdd" xml:space="preserve">
    <value>添加选项卡</value>
  </data>
  <data name="TabControlAddHeader" xml:space="preserve">
    <value>添加选项卡头部</value>
  </data>
  <data name="TabControlAddTab" xml:space="preserve">
    <value>添加选项卡到'{0}'</value>
  </data>
  <data name="TabControlDeselectedEventDescr" xml:space="preserve">
    <value>在取消选择一个选项卡页作为最顶部的选项卡页之后发生</value>
  </data>
  <data name="TabControlDeselectingEventDescr" xml:space="preserve">
    <value>在取消选择选项卡页时发生</value>
  </data>
  <data name="TabControlInvalidTabPageType" xml:space="preserve">
    <value>无效的选项卡页面类型 {0}</value>
  </data>
  <data name="TabControlRemove" xml:space="preserve">
    <value>移除选项卡</value>
  </data>
  <data name="TabControlRemoveHeader" xml:space="preserve">
    <value>移除选项卡头部</value>
  </data>
  <data name="TabControlRemoveTab" xml:space="preserve">
    <value>移除选项卡从 '{0}' 到 '{1}'</value>
  </data>
  <data name="TabControlRemoveTabHeader" xml:space="preserve">
    <value>移除选项头框从 '{0}' 到 '{1}'</value>
  </data>
  <data name="TabControlSelectedEventDescr" xml:space="preserve">
    <value>在选择一个选项卡页作为最顶部的选项卡页之后发生</value>
  </data>
  <data name="TabControlSelectedTabDescr" xml:space="preserve">
    <value>TabControl 选中选项卡页</value>
  </data>
  <data name="TabControlSelectingEventDescr" xml:space="preserve">
    <value>在选择选项卡页时发生</value>
  </data>
  <data name="TabControlTabsDescr" xml:space="preserve">
    <value>TabControl 的 TabPages</value>
  </data>
  <data name="TabFormSwitcher" xml:space="preserve">
    <value>选项卡切换器</value>
  </data>
  <data name="TabFormSwitcherSelectedObject" xml:space="preserve">
    <value>选项卡控件</value>
  </data>
  <data name="TabHeaderDescription" xml:space="preserve">
    <value>TabControl的选项卡切换框区域</value>
  </data>
  <data name="TabHeaderDisplayName" xml:space="preserve">
    <value>TabControl 头部选框</value>
  </data>
</root>